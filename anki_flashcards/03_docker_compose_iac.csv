Front,Back
"What is Docker Compose?","Docker Compose is a tool for defining and running multi-container Docker applications using a YAML configuration file (docker-compose.yml)."
"What command starts all services defined in docker-compose.yml?","docker-compose up -d (the -d flag runs in detached mode)"
"What command stops and removes all containers defined in docker-compose.yml?","docker-compose down"
"What is the difference between 'docker-compose up' and 'docker-compose start'?","'docker-compose up' creates and starts containers, while 'docker-compose start' only starts existing containers."
"What does the 'version' field in docker-compose.yml specify?","It specifies the Docker Compose file format version, determining which features are available (though it's now obsolete in newer versions)."
"What is the purpose of the 'services' section in docker-compose.yml?","The 'services' section defines all the containers that make up your application, including their configuration, images, networks, and volumes."
"What does 'container_name' specify in a Docker Compose service?","It sets a custom name for the container instead of using the default generated name (project_service_number format)."
"What is the purpose of 'hostname' in Docker Compose services?","Sets the hostname inside the container, which can be useful for service discovery and inter-container communication."
"What does 'restart: unless-stopped' do?","Automatically restarts the container if it stops, unless it was manually stopped by the user."
"What is a Docker network in the context of Docker Compose?","A Docker network allows containers to communicate with each other securely and isolates them from other Docker networks."
"What does 'driver: bridge' mean in Docker networks?","Bridge is the default network driver that creates a private internal network on the host for containers to communicate."
"What is IPAM in Docker networking?","IP Address Management (IPAM) controls how IP addresses are allocated to containers in a network."
"Why did we use subnet 172.20.0.0/16 for our enterprise network?","It provides a large private IP range (RFC 1918) suitable for enterprise use, avoiding conflicts with common home networks (192.168.x.x)."
"What are Docker volumes used for?","Docker volumes provide persistent storage that survives container restarts and can be shared between containers."
"What is the difference between named volumes and bind mounts?","Named volumes are managed by Docker and stored in Docker's area, while bind mounts map a host directory directly to a container path."
"What does 'labels' do in Docker Compose?","Labels add metadata to containers, images, networks, or volumes for organization, automation, and management purposes."
"What is the purpose of environment variables in Docker Compose?","Environment variables configure application behavior, set runtime parameters, and allow customization without rebuilding images."
"What does 'depends_on' do in Docker Compose?","Controls the startup order of services, ensuring dependent services start before the current service (though it doesn't wait for readiness)."
"What is the 'build' section used for in Docker Compose?","Specifies how to build a custom Docker image from a Dockerfile, including context path and dockerfile name."
"What does 'context: .' mean in the build section?","It sets the build context to the current directory, meaning Docker can access files in the current directory during the build."
"What is the purpose of 'dockerfile: Dockerfile.rhel'?","Specifies a custom Dockerfile name instead of the default 'Dockerfile', allowing multiple Dockerfiles in the same directory."
"What does 'ports' configuration do in Docker Compose?","Maps host ports to container ports, allowing external access to containerized applications."
"What is the format for port mapping in Docker Compose?","'host_port:container_port' format, e.g., '9000:9000' maps host port 9000 to container port 9000."
"What does 'command: tail -f /dev/null' do?","Keeps the container running indefinitely by continuously reading from /dev/null, useful for containers that don't have a long-running process."
"Why is Infrastructure as Code (IaC) important?","IaC ensures reproducible deployments, version control for infrastructure, consistent environments, and reduces manual configuration errors."